@using ModelProject.Model
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Components.Authorization

@page "/Upload"
@inject ModelProvider ModelProvider
@inject NavigationManager NavigationManager

@*Checks if the user is signed in*@
<AuthorizeView>
    <Authorized>
        <h5>Upload Page</h5>
        <form class="row g-3 needs-validation" novalidate>
            @*Allows the user to input a Model Name:*@
            <div class="col-md-4 position-relative">
                <label for="validationTooltip01" class="form-label">Model Name:</label>
                <input type="text" class="form-control" id="validationTooltip01" required>
                <div class="valid-tooltip">
                    Perfect
                </div>
            </div>

            @*Allows the user to input the Files of a 3D model*@
            <div class="mb-3">
                <label for="=" formFile" class="form-label">Please Input The Model Files</label>
                <input class="form-control" type="file" id="formFile" accept=".obj,.fbx,.stl,.gltf,.glb" required>
                <div class="invalid feedback">
                    Please select a file
                </div>
            </div>

            @*Allows the user to input images of a 3D model*@
            <div class="mb-3">
                <label for="=" formFile" class="form-label">Please Input Images of the 3D Model</label>
                <input class="form-control" type="file" id="formFile" accept=".jpf,.jpeg,.png" multiple>
            </div>

            @*Allows the user to input a description*@
            <div class="input-group mb-3">
                <span class="input-group-text" id="inputGroup-sizing-defult">Description:</span>
                <input type="text" class="form-control" aria-label="Enter Here" aria-describedy="inputGroup-sizing-defullt">
            </div>

            @*Allows the user to input Specifcations*@
            <div class="input-group mb-3">
                <span class="input-group-text" id="inputGroup-sizing-defult">Specifications</span>
                <input type="text" class="form-control" aria-label="Enter Here" aria-describedy="inputGroup-sizing-defullt">
            </div>

            @*Creates a dropdown for a user to select what catagory the model falls under*@
            <label for="=" formFile" class="form-label">Please select the Category of your model</label>
            <div class="btn-group">
                <button type="button" class="btn btn-danger dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                    @(string.IsNullOrEmpty(selectedCategory) ? "Category" : selectedCategory)
                </button>
                <ul class="dropdown-menu">
                    @foreach (var category in categories)
                    {
                        <li><a class="dropdown-item" @onclick="@(() => SelectCategory(category))">@category</a></li>
                    }
                </ul>
            </div>

            @*Creates a dropdown for a user to select what file format the model falls under*@
            <label for="=" formFile" class="form-label">Please select the file format of your modell</label>
            <div class="btn-group">
                <button type="button" class="btn btn-danger dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                    @(string.IsNullOrEmpty(selectedFormat) ? "File Format" : selectedFormat)
                </button>
                <ul class="dropdown-menu">
                    @foreach (var format in fileFormats)
                    {
                        <li><a class="dropdown-item" @onclick="@(() => SelectFormat(format))">@format</a></li>
                    }
                </ul>
            </div>

            <a @onclick="UploadModel" class="btn btn-outline-warning m-2">Upload Model</a>
        </form>

    </Authorized>

   <NotAuthorized>
        <li class="nav-item">
           <NavLink class="nav-link" href="/Account/Login" Match="NavLinkMatch.Prefix">Login</NavLink>
        </li>
        <li class="nav-item">
            <NavLink class="nav-link" href="/Account/Register" Match="NavLinkMatch.Prefix">Register</NavLink>
        </li>
   </NotAuthorized>
</AuthorizeView>




@code 
{
    private Model.DigitalModel model = new Model.DigitalModel();
    private string title;
    private string description;
    private string specifications;
    private string selectedCategory;
    private string selectedFormat;
    private string[] images;
    private string[] modelFiles;
    private List<string> modelFilePaths = new();
    private List<string> imageFilePaths = new();



    private List<string> categories = new() { "Vehicles", "Sci-Fi", "Animal", "Horror", "Videogame", "Character" };
    private List<string> fileFormats = new() { "obj", "fbx", "stl", "gltf", "glb" };

    private void SelectCategory(string category)
    {
        selectedCategory = category;
    }

    private void SelectFormat(string format)
    {
        selectedFormat = format;
    }

    //saves model files  
    private async Task OnModelFilesSelected(ChangeEventArgs e)
    {
        var files = e.Value as IEnumerable<IBrowserFile>;
        modelFiles = files.Select(f => f.Name).ToArray();
    }

    //saves image files
    private async Task OnImageSelected(ChangeEventArgs e)
    {
        var files = e.Value as IEnumerable<IBrowserFile>;
        images = files.Select(f => f.Name).ToArray();
    }



    private void UploadModel()
    {
        
        
            var model = new Model.DigitalModel
                {
                    Title = title,
                    Category = selectedCategory,
                    Description = description,
                    ModelFiles = modelFiles,
                    Images = images,
                    Specifications = specifications,
                    Downloads = 0,
                    FileSize = 0,
                };

            // adds the model and redirects the user to the home page
            ModelProvider.AddModel(model);
            NavigationManager.NavigateTo("/");
        
    }


    

}

