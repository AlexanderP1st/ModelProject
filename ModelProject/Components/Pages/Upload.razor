﻿@using ModelProject.Context
﻿@using ModelProject.Model
@using Microsoft.AspNetCore.Http @*Retrieving user Id*@
@using Microsoft.AspNetCore.Identity @*Retrieving user Id*@
@using Microsoft.AspNetCore.Components.Authorization
@using System.ComponentModel.DataAnnotations
@using System.IO;
@using Microsoft.AspNetCore.Components.Forms;


@page "/Upload"
@inject ModelProvider ModelProvider
@inject NavigationManager Navigation
@inject NavigationManager NavigationManager
@inject FileUploader FileUploader
@inject UserManager<User> userManager;
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject UserProvider UserProvider
@*@inject IHttpContextAccessor httpContextAccessor;*@


@*Checks if the user is signed in*@
<AuthorizeView>
    <Authorized Context="Auth">

        <EditForm Model="@Model" OnValidSubmit="@HandleSubmit">
            <h5>Upload Page</h5>


          
                   
            
            @*Allows the user to input a Model Name:*@
            <div class="col-md-4 position-relative">
                <label for="validationTooltip01" class="form-label">Model Name:</label>
                <InputText type="text" class="form-control" @bind-Value="Model.Title" id="validationTooltip01" />
                <div class="valid-tooltip">
                    Perfect
                </div>
            </div>


            @*Allows the user to input images of a 3D model*@
            <div class="col-lg-6 col-12 mt-1">
                <div class="card h-100">
                    <div class="card-body bg-light d-flex flex-column">
                        <h4 class="card-title">Model image (JPG/ JPEG)</h4>
                        <div class="form-group mb-2">
                            <InputFile id="imageUrl" class="form-control" @bind-Value="@Model.ImageUrl" OnChange="LoadFile" />
                            <div class="small">
                                <ValidationMessage For="@(() => Model.ImageUrl)" />
                            </div>
                        </div>
                        <div class="mb-2">
                            <img src="/img/digitalmodels/@Model.ImageUrl" class="img-thumbnail" alt="@Model.Title" onerror="this.onerror = null; this.src='/img/no_digitalmodels.png'">
                        </div>
                    </div>
                </div>
            </div>

            
            @*Allows the user to input the Files of a 3D model*@
            <div class="mb-3">
                <label for="=" formFile" class="form-label">Please Input The Model Files</label>
                <InputText class="form-control" @bind-Value="Model.ModelFiles" type="file" id="formFile" accept=".obj,.stl,.gltf,.glb" required />
            </div>


            @*Allows the user to input a description*@
            <div class="input-group mb-3">
                <span class="input-group-text" id="validationTooltip02">Description:</span>
                <InputText class="form-control" @bind-Value="Model.Description" id="validationTooltip02" aria-label="Enter Here" aria-describedy="inputGroup-sizing-defullt" />
                <div class="valid-tooltip">
                    Perfect
                </div>
            </div>

            @*Allows the user to input Specifcations*@
            <div class="input-group mb-3">
                <span class="input-group-text" id="validationTooltip03">Specifications</span>
                <InputText class="form-control" @bind-Value="Model.Specifications" id="validationTooltip03" aria-label="Enter Here" aria-describedy="inputGroup-sizing-defullt" />
                <div class="valid-tooltip">
                    Perfect
                </div>
            </div>

            @*Allows the user to enter the file size*@
           

            @*Creates a dropdown for a user to select what catagory the model falls under*@
            <label form="formFile" class="form-label">Please select the Category of your model</label>
            <div class="btn-group">
                <InputSelect id="categoryDropdown" class="form-select" @bind-Value="@Model.Category">
                    <option value="">Select a Category</option>
                    @foreach (var category in categories)
                    {
                        <option value="@category">@category</option>
                    }
                </InputSelect>
            </div>

            @*Creates a dropdown for a user to select what file format the model falls under*@
            <label form="formFile" class="form-label">Please select the file format of your model</label>
            <div class="btn-group">
                <InputSelect id="modelfilesDropdown" class="form-select" @bind-Value="@Model.FileFormat">
                    <option value="">Select the File Format</option>
                    @foreach (var fileFormat in fileFormats)
                    {
                        <option value="@fileFormat">@fileFormat</option>
                    }
                </InputSelect>
            </div>

            <div class="mt-auto">
                <button type="submit" class="btn btn-outline-primary w-100">Upload Model</button>
            </div>
        </EditForm>

        @*<div class="d-flex justify-content-center p-2">
            <ul class="list-group" style="max-width: 800px; width: 100%;">
            @foreach (var model in models)
                {
                    <div class="position-absolute top-0 end-0 p-2">
                        @{
                            var userName = ReturnDesignerOfModel(model);
                        }
                        <div>
                            <a href="/Home/User/@userName" class="user-link-owner">@userName</a>
                        </div>
                   </div>
                }
            </ul>
        </div>*@
        
    </Authorized>

    @*Allows the user to either Login or Register*@
    <NotAuthorized>
        <div class="card mb-3">
               <h5>You are need an account to upload a model</h5>
           <li class="nav-item">
              <button class="btn btn-primary" @onclick="NavigateToLogin">Login</button>

           </li>

           <li class="nav-item">
              <button class="btn btn-secondary" @onclick="NavigateToRegister">Register</button>
           </li>
       </div>
    </NotAuthorized>
</AuthorizeView>




@code
{
    private User User { get; set; } = new();
    private List<string> categories = new List<string> { "Vehicles", "Sci-Fi", "Animal", "Horror", "Videogame", "Character" };
    private List<string> fileFormats = new() { "obj", "fbx", "stl", "gltf", "glb" };

    [Parameter]
    public DigitalModel? DigitalModel { get; set; }
    private UserModelUpload Model { get; set; }

    protected override void OnParametersSet()
    {
        Model = DigitalModel is null ? new UserModelUpload() : new UserModelUpload(DigitalModel);
        base.OnParametersSet();
    }
    
    private async Task HandleSubmit()
    {
        var digitalmodel = DigitalModel ?? new DigitalModel();
        
        digitalmodel.Title = Model.Title;
        digitalmodel.Description = Model.Description;
        digitalmodel.ModelFiles = Model.ModelFiles;
        digitalmodel.ImageUrl = Model.ImageUrl;
        digitalmodel.Specifications = Model.Specifications;
        digitalmodel.FileFormat = Model.FileFormat; 
        

        if (digitalmodel.Id == 0)
        {
            await ModelProvider.AddModelAsync(digitalmodel);
            Model = new UserModelUpload(digitalmodel);
        }
        else
        {
            await ModelProvider.UpdateModelAsync(digitalmodel);
        }
        NavigationManager.NavigateTo("/");
        // submit the model
    }


    private async Task LoadFile(InputFileChangeEventArgs e)
    {
        var filename = await FileUploader.UploadFileAsync(e.File);
        if (filename is null)
        {
            Model.ImageUrl = null;
            return;
        }
        Model.ImageUrl = filename;
    }
    
    
    @*Working on uploading an image
    private async Task OnImageSelected(InputFileChangeEventArgs e)
    {
        var files = e.GetMultipleFiles();
        foreach(var file in files)
        {
            var imageUrl = await SaveFileAsync(file);
            imageFilePaths.Add(imageUrl);
        }
        Model.Images = string.Join(",", imageFilePaths);
    }*@
    @*Navigation to Login and Register page from Upload Page*@
    private void NavigateToLogin()
    {
        Navigation.NavigateTo("/Account/Login");
    }
    private void NavigateToRegister()
    {
        Navigation.NavigateTo("/Account/Register");
    }
    public sealed class UserModelUpload
    {
        public string User { get; set; } = "";
        [Required(ErrorMessage = "Model title is required.")]
        public string Title { get; set; } = "";
        [Required(ErrorMessage = "At least one model file is required.")]
        public string ModelFiles { get; set; } = "";
        [Required(ErrorMessage = "At least one image is required.")]
        public string ImageUrl { get; set; } = "";
        [Required(ErrorMessage = "Category is required.")]
        public string Category { get; set; } = "";
        [Required(ErrorMessage = "Description is required.")]
        public string Description { get; set; } = "";
        [Required(ErrorMessage = "Specifications are required.")]
        public string Specifications { get; set; } = "";
        [Required(ErrorMessage = "FileFormat is required.")]
        public string FileFormat { get; set; } = ""; 
        

        public UserModelUpload()
        {
        }
        public UserModelUpload(DigitalModel digitalModel)
        {

            Title = digitalModel.Title;
            ModelFiles = digitalModel.ModelFiles;
            ImageUrl = digitalModel.ImageUrl;
            Category = digitalModel.Category;
            Description = digitalModel.Description;
            Specifications = digitalModel.Specifications;
            FileFormat = digitalModel.FileFormat; 
            
        }
    }
}