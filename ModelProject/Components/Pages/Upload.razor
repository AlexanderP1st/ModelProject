@page "/Upload"
@inject ModelProvider ModelProvider
@inject NavigationManager NavigationManager

<h5>Upload Page</h5>
<div class="card text-centre">
    
@*Allows the user to input a Model Name:*@
<div class="input-group mb-3">
    <span class="input-group-text">Model Name:</span>
    <input type="text" class="form-control" aria-label="Enter Here">
</div>

@*Allows the user to input the Files of a 3D model*@
<div class="mb-3">
 <label for="="formFile" class="form-label">Please Input The Model Files</label>
 <input class="form-control" type="file" id="formFile" accept=".obj,.fbx,.stl,.gltf,.glb" multiple>
</div>

@*Allows the user to input images of a 3D model*@
<div class="mb-3">
    <label for="=" formFile" class="form-label">Please Input Images of the 3D Model</label>
    <input class="form-control" type="file" id="formFile" accept=".jpf,.jpeg,.png" multiple>
</div>

@*Allows the user to input a description*@
<div class="input-group mb-3">
    <span class="input-group-text" id="inputGroup-sizing-defult">Description:</span>
    <input type="text" class="form-control" aria-label="Enter Here" aria-describedy="inputGroup-sizing-defullt">
</div>

@*Allows the user to input a description*@
<div class="input-group mb-3">
    <span class="input-group-text" id="inputGroup-sizing-defult">Specifications</span>
    <input type="text" class="form-control" aria-label="Enter Here" aria-describedy="inputGroup-sizing-defullt">
</div>

@*Creates a dropdown for a user to select what catagory the model falls under*@
<label for="=" formFile" class="form-label">Please select the Category of your model</label>
<div class="btn-group">
    <button type="button" class="btn btn-danger dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
        @(string.IsNullOrEmpty(selectedCategory) ? "Category" : selectedCategory)
    </button>
    <ul class="dropdown-menu">
        @foreach (var category in categories)
        {
            <li><a class="dropdown-item" @onclick="@(() => SelectCategory(category))">@category</a></li>
        }
    </ul>
</div>

@*Creates a dropdown for a user to select what file format the model falls under*@
<label for="=" formFile" class="form-label">Please select the file format of your modell</label>
<div class="btn-group">
   <button type="button" class="btn btn-danger dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
        @(string.IsNullOrEmpty(selectedFormat) ? "File Format" :selectedFormat) 
   </button>
    <ul class="dropdown-menu">
        @foreach (var format in fileFormats)
        {
            <li><a class="dropdown-item" @onclick="@(() => SelectFormat(format))">@format</a></li>
        }
    </ul>
</div>
<a @onclick="UploadModel" class="btn btn-outline-warning m-2">Upload Model</a>
</div>

@code 
{
    private string title;
    private string description;
    private string specifications;
    private string selectedCategory;
    private string selectedFormat;
    private string[] images;
    private string[] modelFiles;
    private List<string> modelFilePaths = new();
    private List<string> imageFilePaths = new();



    private List<string> categories = new() { "Vehicles", "Sci-Fi", "Animal", "Horror", "Videogame", "Character" };
    private List<string> fileFormats = new() { "obj", "fbx", "stl", "gltf", "glb" };

    private void SelectCategory(string category)
    {
        selectedCategory = category;
    }

    private void SelectFormat(string format)
    {
        selectedFormat = format;
    }

    //saves model files  
    private async Task OnModelFilesSelected(ChangeEventArgs e)
    {
        var files = e.Value as IEnumerable<IBrowserFile>;
        modelFiles = files.Select(f => f.Name).ToArray();
    }

    //saves image files
    private async Task OnImageSelected(ChangeEventArgs e)
    {
        var files = e.Value as IEnumerable<IBrowserFile>;
        images = files.Select(f => f.Name).ToArray();
    }



    private void UploadModel()
    {
        var model = new Model.DigitalModel
        {
             Title = title,
             Category = selectedCategory,
             Description = description,
             ModelFiles = modelFiles,
             Images = images,
             Specifications= specifications,
             Downloads = 0,
             FileSize = 0,
        };

        // adds the model and redirects the user to the home page
        ModelProvider.AddModel(model);
        NavigationManager.NavigateTo("/");
    }
}
